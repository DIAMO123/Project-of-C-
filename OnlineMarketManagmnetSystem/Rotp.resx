<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picturenone.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARIAAAC4CAMAAAAYGZMtAAAABGdBTUEAALGPC/xhBQAAAKhQTFRFjDSU
        ////jzCXr3C0kS6Zv47EizKTiCyQ+PT5ijCSjzuYhSeOpWmsiS2Rq3Sy8Obx8+z1l0qgz7DTgx+L0bbU
        xJ/I6t3s+/n8tH66oWKo3cPffxKHmk+ik0Kc5tbo9vD3m1Wi49Dm6+Dt3cjgs4K5pGCquY6/1r/axqfK
        v5fE0rbWx6LM59nql1Cfp26ttIa6eQCCqmevoFeou4bAijyTqnmxupTAlSufELyakQAAGaVJREFUeF7t
        nQljqrq2x+Hs20CIzBVUBkFUxHG3x+73/b/Zy4QSJqfe13Y///fccxAQ4UdWsrKykkq/nhL0Vkj/PCXo
        P2/SU6L++cU3nir1RNLQE0lDTyQNPZE09ETS0BNJQ38lEsj/e5/+PiRARxrfvE9/GxKIoH1wwCPl5K9C
        AhVFGwy38joAfM89+ouQQEXfHdamLMtvLt91l/4aJAoC42GmYiDyTNP5zrv0dyCByI0+1lufAJFlBz1i
        N38FEohQWGTEYpgMxA/cp5+PRHH1geNRi2Hy7Ifs5qcjAUogjbIptximFXzIbn42EugGWuEJPLBGCj98
        p34wEsVF706dhyxvk8fs5qciAdgrs+cppyDIkR6zm5+JBOiKNt6cm5iq/MODdvMDkeACou/ma4sjqCte
        /H9DAhSkjYu0WYWUWmuPhQZ+GhKAkD13PP70bfKXyoNVyY9CoiMlKbIui2Hajh9zXbF+DhLFhXvBS21V
        /liXj+iHIAHI1eap2V2FcKnFw4XkZyCBrhsOZ60FRPTlZe9xu/kJSJQAva2n/Jlryrd8gyt73G6+PRJi
        Mf/G/IHrMpc53+JSh4+FSqi+NRKgI7jYdDYx2fiVb5WaLR63m++MBHup9mjdWaNON2GdiJxKj9vNt0UC
        SLC9aO3XMcUfUc1qsJ82dB+3m2+KBCIlnDsz/qQtUvOdnTcKkPUJ7c23RIJrEH1RZB1tDJW3VOxGGcEl
        B3yC3Xw/JLiJkQynDLa3KxsHbUT84qHxm1LfDAlErr2sBNvbZA3tIGpaDbamz2hvvhkS3UWLzbbPYrBS
        A7hSxj8I2uqPxgWovhESxdWN3Oq1GGwczk5BbntLNPwUu/k2SAAK/nmpeectsua6jtzWMiLL759iN98D
        CcAWk2wulA+izHYBgh3eytb9FLv5BkhosH004c/VJ7VwkYSijjIiFwG/4oP6aiQ02F5cthhci2wXgS6h
        XReRz7KbL0eiYy+1v83lmjqai2ucXYs/wuShz7GbL0YCo4KlhFyS780RokQ6a5zNJ9nNlyO5roio6wUp
        A31E5E/p3xB9seFAuKepVP2aLSMSGkItPb2T4ofHb0p9dV0CkWR0RRFL5QOddOe62xqizSfE05i+GgmG
        omhGz9vHTa9NnxbpfUT8/WfZzTdAQhwTzeh8XG+g6JRIl8/KlNqfZTffAQmBgoDRHnN2JBYou0BE3jyY
        elTRt0CCBd3AaNazlhGwPAAk9cQcsfyPT6tKvg0SAgUta8N52Y4VEYDs/jIip7tHUyjO+j5ISLgkKmZn
        KFaBCwcRQGGnz8q1enB2RVXfCQmpMZIVh+KnBmJvvs+L51LnD6dQnPW9kODHR2OaPzJ1Qt7X7/XiueLk
        8+zmuyEhvps+WJvbA26E2I4riHxC6lFF3w4JgQKMMSqHH3q9eC51+Wl+GtY3REKgnKoGvdeL54o/JzTP
        9S2RVBRcqlmJXj+xvbkLieKedarVAHKDwD0VdyyIAi4XN69YeB8+iwi/U0jOZ0fxpqjq8wVXFBJsN/X2
        BncSEJFyB6s7kLy/naXx+0du+K+zLt50l0PBjteiWDMVUjIajQwNQuUNb4xeDOi6iyU/utF+kZ0VVbsr
        gcOfu0dezW50TBtJkW3bEXDxe7oRy81IIKwWZbUgw7AQjfnLNJcSLTg6nJ8HuWdoiP+thkjZ0M/+IDDO
        iZrmrp60aVRaVHfJd/Yorwxp4e4SigbDlKdxqdvJy0K7rbDcgUTM6lgjAMDynBaTh/iBFG3NPxLFqMCN
        hnl0GZHZArENpjisdfjUfRWJwfd2S12eh7Sgctw3Mg7iYiHdAOVhJPLI1efVGFBuQ12vEpG3FMnsWNBP
        3sAVjGG7q8Xn/SoStOB7uzVLSrsBSvQxaWuyLWcAK9Vcv+5FMtt6nkd9722QsGeyTFpY/QK67OF9iynV
        aSlZ0Z2eESzpXU9NKiuz8xm5Ftlnkqtux5W7RyGzAD9ue1SqrLQbqI/XXcFtc8gCUVfoXiRje7fbLTJ8
        n6pEzX36OjeGtFZIdxG1o9lm/jEn2tNSwh7JM9yInOVnS4NqNJDCJEnCEX4YdWnjzUSr3LsesZBBnAgF
        r6JTCgXU533jQdn4ytHAe5G8S1Gkaa8ESUhG6vyhhpvPAX3a/b/kDNNALm0IsQgSKg/vpGam5iuupU7O
        CN7xXnUfkO3q2wQ6q2kKpHVETCxuNxAVF3LJP65re+5FEqdYMXk4KyHvMd1RZ4NazJLUFf6qbI9x6S+R
        bPcIuiv6oYQke7TmQwtSSozG2D9QaOnwxopLf6eplD9ocOgymlLm/KpUtser13xH/u1QBxLtCaQhaaan
        8/PjlUj8UQCAW0tS3NJH6kIisdZpIwHJnYtf5OLtjTu+RASb8v4aJo8jeduRe2F9UWSQuy7Ii1UrWVKn
        UpJFSHJrlcKst5RIiNRU3oCUQYW4N3X5IbUbxb48HIRL1Klx6tHDSJwgJI2FOcAvQFFo8zqnBFLJhVzn
        uiSNkFsQhD5uY6jMCW0wupGM8NlrWgb1Y0uHJ2WVJrKrjkCnXq9oix9EYhZQkehrTxPcXaFViTV+pwRy
        u1m9ypkWLEgtqBYSUqhYaL0bycDHBZ69XJQ0w/gvfCgYRT05oSdZ88vF5E4kKn9fuYSwtdBNf8LdxrUW
        sGwR39tSvTK/hLWQuRYwplbMtIa9pURJrJPHDlAzio9NkcntHfoqldkVP7BddyLxNeaNyZMIQU3wRvEr
        RZFQimcUiccjH69HTXifZn/1qocz67SIAEBLYnUVpeelShCo1FKqma5X69SqnU4muvHTO3Wv4USItaWE
        iZJU3o95wI/oDqouQtnH0ZlnsT4uqkzifiTwmKbnbp0uCfhxe1NJoVCkDScwTec2DTlE87gGJY9OF+vQ
        HUiozdiutmI/NtkpKHnlCPx4ThoQ4I4rc/BwHwf/2wrdHasK8qNdOTo7I/FHTSTg6Bwqe+sjOkLqkSIV
        tHjO5joLCUDkajUHzqr2oFp1OxKwIl0TGynRZkZ7KRtNR9o8j2emlw0Teiv41rXDa7rFlYm39XL9I8uy
        dQTRIscbWWq4YH46yroo6B0fyltyRIA2iCqtBGAecqlU7OHq8IArm3Rx9hIlhOZi/VPQIeYe3YxEAgnp
        muB+iB4NyJbxgYuijqRkb4yjszeO9+zGTImkRVgSADrdsG18FITlUcC+Qo60L3UlPAJgHQKuSlyASlc+
        ZttE2AmVpVCz5UeBYlO3I8GPg0VuE9IGlm2T0A06R5Gxylgf2Qt1LPoVskFN63yUn16eckm810DlN4oV
        VIxBzTJ0IXgjzy4t03AHkq+WDk+PmDbfOEZbB4v21er8YibKD0SC66myOilaxj2be3RJ8HrnF+rXm5GQ
        zN1LEu6qfn79JUKdH+iWXksecRPW2NGQJOAn9SgQapPCJfu6recmJLjCcF1du6jqm1IA38kV2ZUIEbke
        4gf6RMZJUIWlSzo+xBXV8U/xc3qk76uNjgPpTn6ppq5HQorHcbCczHj4sFPTWSVSqEjxlO+nmk43EX80
        QJqpkRPzIz0yvdQ5vEUKb+DxV2nMXx7i0qOPZ8IPtEqYYE3jn9Osc2T9aiS4ezfeXJPYTSqw86+JoWes
        14gdBArcHSY117JX3sqwS7OjnWLVwI2dsq8+7vXadsYJrkQCkLR3hOa9R+q5GXTHtRt+1did6HpyVea8
        qOywY5UAQOOtnO7wtjK4BetZ8YNIoLJYiX5xn85IIKr1TjMW8CHObX/yWYf89MC7vujDWpEFO78IiQ7m
        7fmG7TojcQ3xfmPuWLq71/seBPfo1gnzE7WlQazoa5DoUq3rdEEnJLAWwpiyni7uFN5CuK6YVCH4KvSf
        r0GiS8PbfvWEBI1FlAWLBrv7as/tdpkjGiRhzspXIAGVMOF1KpGAMqbCFet0vzu+JiTYp+n+3LH7CiTu
        6NZWrkSi2KJ9sJVpUXh7S1PXdHFi8gVIUHRzu18iQSPBbibUbBQhGeNembwt/wok0L29JuRIIBJWUPTp
        PQD3xoqpQ1npyf7fI7km5aUujkSJBNdjTatDNH6sai2lLvnA3b1I7vZeEUsCqMqfmhb+30l4E/cZqvfF
        kSAhJCiPyC1AUHfw8fXw18srceE9/CiVKnZSqDzu9IlIVHY//DJYlWvy/2KRU7LOrPt+JLiY898qZaXD
        N7upiOQQlCqRCAMMW+J91zFhILNXI+QXqSjaV5nk7/shHZKvqFz2SEDirzR+gctqCaww9SNR6kNo2VzC
        3XQahKgK8XQAJoYEQKFA0HF0CKopWVjmJmy7nuLSIcFSr67ranUHOuaDwVUk6jCoXYxHM0vxvUTky63q
        R+LOqy9a9h3bbc3fB0q1JmVIdHFhHhrL0ndizybei9kkJ+mCk/eqQ6C4tSVLpocmEr+xEgNUSEyXqxaJ
        6lAvEqiLd7HR2x8A/3ATiZJUH98c431A+RAQx+NTBKQmRUTCamatOhpdjp3XkYg3CGngv5QmBsw71ItE
        CQXLzzpLWxsSsdrISFUCoFA1md1TrdqQSIgPjXGlNAjUiwS4zpYPPROlzsgmecj96kWCjOqNqeN6qTyp
        BQlAH9XoHs0/gcfqags+7dy3qxWJpBwqv0Iyv8i+PiTIrn4BH59uh/allLVeJCwVpNS6u9C1ImGJi1z0
        8XWe+8hUpki0qR2JWBX5f0gh60US1GpzLH82r4wFtqkPiVhpyj2pGW1I9PMIFBYddlSE0fO+9RTbkUAo
        PGIzhFRDokjVq5zknFP/29SHBArjH1NSQXaoDYlQb7AcBp6JwtX3pyfakQAkJB07xBj7kHS53lk5xNiq
        PiS6Vo0Azaiv1a42JICl/jL5S1JK0Jx/JOpdmrUdiYSE0Yc1yYvoQaKArihE3jOM04tE7KTEPfO1W5BA
        IRMEIyGGWH1r076pVp+CpOZVVcWDWa26Hol5WympI8F1s4gEe+T82y3qQKLcggTCWiy8or6lC3uRCIaj
        3laXtCFBB/6RyqkM39XVUZcoH9XdF+oSJFTmovxXmiHXqt7qFYgueTfYNiRid2ZIWxw2bsmV8UGuNnUg
        EVux/hYH6t0LoxJvuvNp+pAAvfqg8vomJDVPlU73Fm7/Dr8ECt0m/w9xlDqRIMEJqqvHbPuQSEiIgKkk
        Tb5dbUgU4Y1Su9cToYOwOafl1dWKBCCj2gZj77UHCdQbkRlB3V5RPxIxeNr9t99akQhp/nSwEkbC8mkz
        kgberlYkuiYYcn8fB0abbCKIzJQ5685AI6K54GcZXYtStSDBflm1dTCZMYkO9vpITmxTG5Jy5lMpNhW2
        03Ak7UiTJk46Ci+422x7kUAkBgf8xe/2ot6KRBzSI9EN3BUU3pS8Qh331YIE/hbaK+LXkMfvRgJ4Bn8p
        XZhSiLvh/Ly6epE0nB3/oCAdgobEYDxDotiCW0DrV72+dt4ad9ZbrgfEcUKCpFE3pGReZQuSTkEBSben
        2I+kEWiUs9HuyA9W1VJKIJtuUGq7w0ig3ojlLpNjS0JQs5SAWhKC3xZ7bQYaz0Li4MC9SCS3OfhpTpwW
        VX+NIZGQEFpgiYQtYxbTdM2vUZWw9gI1HEVcDYmHXmulJDssX7pUCD9t0hGDNl1AoohTAK5TiUTIrZRX
        tOhAcZj4OrHqFVX7F6fJwQKSG7TtXLrhApIyUe4mcSSKXe0iySa1/bYpNRfFkAjfzdis9fuR3OmXYMH6
        vLMrxJGIzRBP7sb9nGvzu87iSMA5nDs7+eN3IukJTVxCgovrza+VI6mFbmWTvljc97nZdDgS7P4ZzBbV
        85SMO5F4nZ7aZSSdo7h+nK82q3XavKMSiVKb2suW7VWim8tdiQS3WGzaRDkgjHUfEr9nScfLSJqDlkSq
        YyRHoMDjbt/4A3olEiCGs2WLZd4px1uZnJDg6vmAS96wMvxzH5KZ3VlIrkFS90OJ8gQGQYCgjv+tJGKd
        cUIiodpM1Tygj4Ik0a+/qDMSMs9iWlQn4dyHpGV62EnXIMF9HdGxlwsUBGGRmpYVb94xGrHKPCGR3Gr8
        FRfXJes46u6/N9UnFSS4LtoJ0Z+7kFQMr6mrkEjIFaY+zQM3PBf+yaK2vuIZSX3UwOf+EQjCmmffqyoS
        3O4Ij3MPkmVHV43pOiS4LY42pz8kUCjuoIpgOhfnMpyRSIE4bIBdRv48SBl1L79Rl4CkptuRWCNmv126
        Egl+N6499CiVPApqtzE9IFQZwvbPSHRUrYbixbnAQleaZ2zFk4vqCZRiJDfZoGqu+VqYnboWCRZyNcPJ
        ZtsPNqW+KtMIFjFP8THNWSVw7S7Od5xFws0orr4o8i3/Up+cvlIyZpMur9Fsmw0XXfGIk25Agj0lhLTF
        WELNRjSPEJv7SLQvp5cQnYZl1TVfmPMsiFw93PNv9WjR81pBdMUFuAah1JHPUtUtSLAwFQUJGUJM1pyn
        +VBVi7nO/TWrAOeyc1Y5ZbJX3QNIWFddoVTPOMlJNyLBak/T7F5wlXm/5uFT/uhTu/i02n5B10XIvVxI
        7kBST01iyjv/kj4dj9oaPTXkg6Kr913kDV3jdZsWyeUzb0dSWoKouHv2LQDL9Vic9f2ZAto+jwsyJtIn
        4Dq+N8ksdRVeupPbkdQ7c0weaWXopOqaMCkgaaeJ0qeF8Cq5hqQsi19tnMN2KKcFUSpy59N0Mi34J3wq
        qFcvEBuW+0suJAR3m3hAw7P0eu36LCQpLiUwqmSwss0wJK8PQMAPhaGNG3MsiWySHfj/ZEpoxD5ShaFG
        zkHl9fAhOmsURYt3/AF/XNjhO92w39/tX6NIS2cDeiS0wwhAjW6G5GCI/yFreSm5/I4vF0X4e6RW6WHy
        eXUJlPiCg6JoRKCysGNM1qucjCqLqJshklzxmu+D9Xq9lE47LbJsIwvw+Wc/x1fZ9lQtt4iGwCUr9p13
        qav1dEhjyOS7qu8vY+vQw+R2JLUMNq4VNg/0y3Eyf+s4zkr186lF48oDRAdR5nhzM5Hj7XYRy5nng3/J
        jo0jx/EUI9HJcWftb3M126RyWOAzTWNEdk7kdFMkUEILeetY6mwepv7bNE2Sd2Pty07hvxSmnw/eFu/v
        i2SRxgsdRuNkMc9VeVjILwN17Vipesj9t3fyNxGs4ft0lqo8mN2mO5CglgXOaL4mMjZwYA1/71dupkZZ
        qinKbjVAETYNisTJ1fnQW2Tm0vE1vKMwho48mp+RvFrL+XR9HMjhQV6tth8USe6nq2ECAYpN4GrL6fD3
        2gq8PBgXsTWT/31TjdRMpyt0nM/tZB5PIkXS4WDjWTP1Y6MGR3MzTA/WYaUiI5uqXjwzpquD3z32eg8S
        2Jj7i3shZI2RYOO/G9N4M5N3mZpkajaZpLgfvsqyJcKlJ449dTmcLT5iy9pGqR9PZcuUX5YECTYcDx+f
        Do3Mz+fyux2bVjpgX5Ity/xQ0DsZf8WHZx+5hbxXA7fsH6H/8ssfZVmYm+Pcn6a4JzmxdYBwOU4HA/NQ
        yOHR2hje1Bw71sY3X9JVaDmFZaU9SyLdgURCtdlYdIAV26a7UZPxJE3TaUiRpFm2xkgmpomLTYaryLFa
        DGfj3WAwGB/T9J8i/TBKJJmZSFLirQI92y7lhfQLnyOlaaRJA6s4pB8KbjI03AH3VvHMMpG3/jDV+CPy
        l7/8xchZbrMXufgjzzYmRoJvxFSzwdg8hH6BS4mxKgbu2nJMb5Sn+Wy02fxJetzYe5BIYmwA2+eBpsRi
        JO+BprlLFZeS9zSVUBD6y2CxH+xQlknB7920wIYzTFdjFyP5DSM3PCM5/v593DpBkMVLOVzMnD0I4lTB
        XzIPQ1xKcJ25+P3h5+PxqzxDXq4MiszM5JdfqrH2vGwwkg1t+CHlZB0CGBnD1Mumh9+xh5FsrKUSrFXs
        v8xmmXMAZjzoCw/chURC+2o58ebMNXULOf9T/Bl6ahT7SWoO//zJZOM39gwU9KoOD4eNX6zM8WDtma9g
        oq4ONn7OlyWp6jDN1fxQTFeJo6Yv8uLobM08YV+aLofrRNeB6Q2NV9U0NFNFVhYgFBYWRuIbjq8u3ciz
        Ms2NcGnEJgGRkmws+bAwzWjqJJm1Utay64aZ7GCfZT6zlj0p0vchASg5BaEtp3RN0TjdksUst4W7TncO
        2d6mzoAsVKGMc7LOZTpaThauNhjmcL7d5mP3fTsapTaSlN0rXQjzYKTx4df23QWLwhksiBWmqXEkk2fw
        a0h/2YdlEqwyZbLBDpeCjHj0Fi+OHxNzKI2dIUDaymF+LETgkM7T2UjLisBeWc4m1XU0nhQ6rqjHE7Xo
        boXvQ4IdNmm8dLI4XS/H2imRHOzIcq3JToP2TqJLt+4WqZ+THiFkH6Mo1ABE0JakHT4PSEkU7chXYcSP
        JztJSzT8vHqk6exLGps1ouwSjawaBKMdCGnGKdB3ET5ZR/ZqjYsa6f6dpx5ByY4GiSLtItwFX6p7m7is
        NolbABQ5Xnei3L1IsMeG4DE6AlTNruLzXrBLDdn6R7py3C9I74d9xHvp2QDixyHnAR3voc/ATodk3R68
        k5yDj/IvkeN4B/mLW2Qb4tqC/Sg+k5yMO9m4KJLzyqsR4R0k45fcH1QM2sTwn8ce+K/qMlyi7kaCr09y
        Wnp7C0TYrPnWf1MVEq2qxbCJXfGtph5A8rfqiaShJ5KGnkgaeiJp6ImkoSeShp5IGnoiaeiJpKEnkoae
        SBp6ImnoiaShJ5KGnkgaeiJp6ImkoSeShp5IGnoiaeiJpKEnkoaeSBp6ImnoiaShJ5KGnkgaeiJp6Imk
        IYzkP08J+p+FxBdueIrrxflfYW107GyOpM8AAAAASUVORK5CYII=
</value>
  </data>
</root>