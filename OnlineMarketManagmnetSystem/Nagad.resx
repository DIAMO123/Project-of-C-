<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picturenone.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>